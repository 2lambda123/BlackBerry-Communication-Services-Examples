/*
 * Copyright (c) 2017 BlackBerry Limited. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'

repositories {
    flatDir {
        //point to shared dir with AAR file in it
        dirs '../../../sdk'
    }
    google()
    jcenter()
}

// Create a variable called appPropertiesFile, and initialize it to your
// app.properties file, in the rootProject folder.
def appPropertiesFile = rootProject.file("app.properties")
def appProperties = new Properties()
appProperties.load(new FileInputStream(appPropertiesFile))

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
    }
    defaultConfig {
        applicationId "com.bbm.example.datatransfer"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //Use the mockProvider flavor
        missingDimensionStrategy "authProvider", "_mockProvider"

        // The BBM Enterprise User Domain that is assigned to you.
        // For the purpose of this example app we add it here, but in a real world environment this string should be protected.
        resValue "string", "USER_DOMAIN", appProperties['user_domain']

        //Default to using BlackBerry KMS, to use Cloud key storage (ex Firebase Database) change this value to false
        buildConfigField("boolean", "USE_KMS", appProperties.getProperty("use_kms", 'true'))
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            keyAlias appProperties['keyAlias']
            keyPassword appProperties['keyPassword']
            storeFile file(appProperties['storeFile'])
            storePassword appProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            debuggable true
        }
        release {
            multiDexEnabled false
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    // BBM SDK Dependencies
    implementation(name: 'bbm_sdk-release', ext: 'aar')
    implementation project(path: ':Support')
    // Other UI dependencies
    implementation 'com.google.guava:guava:27.1-android'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
}

// By applying the plugin below this will ensure the project will not compile
// if the google-services.json file is missing.
// A google-services.json file is required for Firebase Cloud Messaging to obtain a push token.
// See https://firebase.google.com/docs/cloud-messaging/ for help on configuring Firebase Cloud Messaging
// in your application.

apply plugin: 'com.google.gms.google-services'
